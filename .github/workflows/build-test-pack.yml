name: .NET CI Build, Test, and Publish

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x'  

    - name: Restore dependencies
      run: dotnet restore

    - name: Identify Changed Libraries
      id: changed_files
      run: |
        # Get a list of all files that were changed in this commit
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

        # Initialize an empty variable to store the paths to test projects that were changed
        TEST_PROJECTS=""

        # Loop through all changed files to identify relevant test projects
        for file in $CHANGED_FILES; do
          if [[ "$file" == *"/tests/"* && "$file" == *.Tests.csproj ]]; then
            TEST_PROJECTS="$TEST_PROJECTS $file"
          elif [[ "$file" == *"/src/"* && -f "${file%/*}/tests/${file%/*}.Tests.csproj" ]]; then
            TEST_PROJECTS="$TEST_PROJECTS ${file%/*}/tests/${file%/*}.Tests.csproj"
          fi
        done

        # Export the test project paths for use in later steps
        echo "TEST_PROJECTS=$TEST_PROJECTS" >> $GITHUB_ENV

    - name: Run Tests for Changed Projects
      if: env.TEST_PROJECTS != ''
      run: |
        for testProject in $TEST_PROJECTS; do
          echo "Running tests for $testProject"
          dotnet test $testProject --configuration Release --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory TestResults/ \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=cobertura \
          --logger "trx;LogFileName=TestResults.trx"
        done

    - name: Upload test results
      if: env.TEST_PROJECTS != ''
      uses: actions/upload-artifact@v3
      with:
        name: TestResults
        path: TestResults/

    - name: Upload coverage report
      if: env.TEST_PROJECTS != ''
      uses: actions/upload-artifact@v3
      with:
        name: CoverageReport
        path: TestResults/**/coverage.cobertura.xml

    - name: Upload coverage to Codecov
      if: env.TEST_PROJECTS != ''
      uses: codecov/codecov-action@v3
      with:
        files: TestResults/**/coverage.cobertura.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        name: code-coverage-report
        fail_ci_if_error: true

  publish:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x'  

    - name: Decode and save certificate
      run: |
        echo "${{ secrets.CERTIFICATE_BASE64 }}" | base64 --decode > certificate.cer
        echo "${{ secrets.PRIVATE_KEY_BASE64 }}" | base64 --decode > privatekey.pem
    
    - name: Run publish script for all packages
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        CERTIFICATE_PATH: certificate.cer
        PRIVATE_KEY_PATH: privatekey.pem
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        chmod +x ./scripts/pack-all.sh
        ./scripts/pack-all.sh
